{"ast":null,"code":"var _jsxFileName = \"/home/capwell/react-brad/react-task-tracker/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport Header from \"./components/Header\";\nimport Tasks from './components/Tasks';\nimport AddTask from './components/AddTask';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [showAddTask, setshowAddTask] = useState(false);\n  useEffect(() => {\n    const getTasks = async () => {\n      const tasksFromServer = await fetchTasks();\n      setTasks(tasksFromServer);\n    };\n    getTasks();\n  }, []);\n\n  //fetch tasks\n  const fetchTasks = async () => {\n    const res = await fetch(\"http://localhost:5000/tasks\");\n    const data = await res.json();\n    return data;\n  };\n\n  //fetch task\n  const fetchTask = async id => {\n    const res = await fetch(`http://localhost:5000/tasks/${id}`);\n    const data = await res.json();\n    return data;\n  };\n\n  //add task\n  const addTask = async task => {\n    const res = await fetch('http://localhost:5000/tasks', {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json'\n      },\n      body: JSON.stringify(task)\n    });\n    const data = await res.json();\n    setTasks([...tasks, data]);\n  };\n\n  //delete  task\n  const deleteTask = async id => {\n    await fetch(`http://localhost:5000/tasks/{id}`, {\n      method: 'DELETE'\n    });\n    setTasks(tasks.filter(task => task.id !== id));\n  };\n\n  //Toggle reminder\n  const toggleReminder = async id => {\n    const taskToToggle = await fetchTask(id);\n    const updTask = {\n      ...taskToToggle,\n      reminder: !taskToToggle.reminder\n    };\n    const res = await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(updTask)\n    });\n    const data = await res.json();\n    setTasks(tasks.map(task => task.id === id ? {\n      ...task,\n      reminder: !task.reminder\n    } : task));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      onAdd: () => setshowAddTask(!showAddTask),\n      showAdd: showAddTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), showAddTask && /*#__PURE__*/_jsxDEV(AddTask, {\n      onAdd: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 25\n    }, this), tasks.length > 0 ? /*#__PURE__*/_jsxDEV(Tasks, {\n      tasks: tasks,\n      onDelete: deleteTask,\n      onToggle: toggleReminder\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 26\n    }, this) : 'no tasks available']\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"oMLu5ny9KvkVFT44DcXo4HMJ8CQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","Header","Tasks","AddTask","jsxDEV","_jsxDEV","App","_s","tasks","setTasks","showAddTask","setshowAddTask","getTasks","tasksFromServer","fetchTasks","res","fetch","data","json","fetchTask","id","addTask","task","method","headers","body","JSON","stringify","deleteTask","filter","toggleReminder","taskToToggle","updTask","reminder","map","className","children","onAdd","showAdd","fileName","_jsxFileName","lineNumber","columnNumber","length","onDelete","onToggle","_c","$RefreshReg$"],"sources":["/home/capwell/react-brad/react-task-tracker/src/App.js"],"sourcesContent":["import { useState,useEffect } from    'react'\nimport Header from \"./components/Header\";\nimport Tasks from './components/Tasks';\nimport AddTask from './components/AddTask';\nfunction App() {\n  const   [tasks ,    setTasks]  =   useState([])\n  const[showAddTask,setshowAddTask]   =   useState(false)\n\n  useEffect(()  =>  {\n    const getTasks = async () => {\n      const tasksFromServer = await fetchTasks()\n      setTasks(tasksFromServer)\n    }\n    getTasks()\n  },[])\n\n\n  //fetch tasks\n  const fetchTasks  = async() =>  {\n    const res = await fetch(\"http://localhost:5000/tasks\")\n    const  data = await res.json()\n    return  data\n    }\n\n//fetch task\nconst fetchTask  = async(id) =>  {\n  const res = await fetch(`http://localhost:5000/tasks/${id}`)\n  const  data = await res.json()\n  return  data\n  }\n\n//add task\nconst addTask= async (task)  =>  {\n  const res = await fetch('http://localhost:5000/tasks', {\n    method:'POST',\n    headers:{\n      'content-type':'application/json'\n    },\n    body:JSON.stringify(task)\n  })\n\n  const data = await res.json()\n  setTasks([...tasks,data])\n\n}\n\n//delete  task\nconst deleteTask  = async(id)  =>  {\n  await fetch(`http://localhost:5000/tasks/{id}`,\n  \n  {\n    method:'DELETE',\n  })\n\n  setTasks(tasks.filter((task)  =>  task.id!==id))\n}\n\n\n//Toggle reminder\nconst toggleReminder  = async (id) => {\n  const taskToToggle  = await fetchTask(id)\n  const updTask = {...taskToToggle,reminder:!taskToToggle.reminder}\n\n  const res=await fetch(`http://localhost:5000/tasks/${id}`,{\n    method:'PUT',\n    headers:{\n      'Content-type':'application/json'\n    },\n    body:JSON.stringify(updTask)\n  })\n\n  const data  = await res.json()\n  setTasks(tasks.map((task) =>  task.id === id  ?{...task,reminder:!task.reminder}:task))\n}\n  return (\n    <div className=\"container\">\n      <Header onAdd={() =>  setshowAddTask(!showAddTask)} showAdd={showAddTask}/>\n      {showAddTask  &&  <AddTask  onAdd={addTask}/>}\n      {tasks.length > 0 ?<Tasks  tasks={tasks} onDelete={deleteTask}  onToggle={toggleReminder}/>  : 'no tasks available'}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}